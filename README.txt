README
for bubble dynamics with multiscale residual neural networks

=============================================================
gen_data.py
=============================================================
Numerically solves system of ODEs given by Rayleigh-Plesset using RK4 (adaptive step-sizes) 
Does this many times for a range of initial conditions to generate data for training and testing various ResNets.
Parameters are adjusted in file 'parameters.yml'

=============================================================
train_models.py
=============================================================
Trains ResNets with adjustable architectures. Each ResNet is a time-stepper trained at different step-sizes.
Parameters are adjusted in file 'parameters.yml'

=============================================================
plot_models.py
=============================================================
Visualizes predictions made by individual time-steppers (ResNets).
Determines which "combination" of time-steppers (ResNets) produces the best means-square-error (MSE) by removing smallest time-steppers first.
Visualizes MSE of individual time-steppers and multi-scale time-steppers, the ensemble of ResNets.
Visualizes predictions made by multi-scale time-steppers, the ensemble of ResNets.
Final plot color codes the 3 larget time-steppers for predictions made by multi-scale ResNets.

=============================================================
script_DTP.py
=============================================================
Calls the algorithms listed above in the following order:
(D) Data generated by calling gen_data.py
(T) Trains ResNets by calling train_models.py
(P) Plots results and errors by calling plot_models.py

=============================================================
parameters.yml 
=============================================================
Adjust parameters for generating data and training your ResNet time-steppers. 
Read by algorithms as a Python dictionary. 
--------------------------------------------------------------
(1) Parameters for both data and training time-steppers (ResNets)
--------------------------------------------------------------
system = 'RP' stands for Rayleigh-Plesset and is used in file names saved by python scripts
dt = smallest time step for data describing the Rayleigh-Plesset equation
k_max = determines the largest time step for a ResNet to make predictions, e.g. time_step = 2^k * dt
steps_min = minimum number of steps required for ResNet to make predictions (otherwise, largest time-stepper will be ineffective)
steps_max = maximum number of steps allowed for ResNet to make predictions (otherwise, training is impractical)
n_train = number of training data samples
n_val = number of validation data samples
n_test = number of test data samples
batch_size = number of samples in a batch, sampled from training data
--------------------------------------------------------------
(2) Parameters for ODE (the Rayleigh-Plesset equation)
--------------------------------------------------------------
u = (Pa * s) dynamic viscosity (u=0 means no viscosity)
R0 = (meters) physical diameter for bubble, before normalization (meters)
Pv = (Pa) vapor pressure inside bubble
exponent = used in RP-equation ( )^(exponent). usually between [1 , 2]
P0 = (Pa) external pressure of environment far from bubble
S = (N/m) don't remember
rho = (kg/m^3) density of fluid external to wall
abs_tol = absolute error tolerance for RK4 to generate data
rel_tol = relative error tolerance for RK4 to generate data
--------------------------------------------------------------
(3) Range of initial conditiosn for ODE data and test samples (the Rayleigh-Plesset equation)
--------------------------------------------------------------
P_min = minimum initial pressure (t=0) allowed for ODE data, RP-equation
P_max = maximum initial pressure (t=0) allowed for ODE data, RP-equation
R_min = minimum initial radius (t=0) allowed for ODE data, RP-equation
R_max = maximum initial radius (t=0) allowed for ODE data, RP-equation
R_test = initial radius (t=0) for test ODE data, RP-equation
Rdot_min = minimum initial velocity (t=0) allowed for ODE data, RP-equation
Rdot_max = maximum initial velocity (t=0) allowed for ODE data, RP-equation
Rdot_test = initial velocity (t=0) for test ODE data, RP-equation
--------------------------------------------------------------
(4) Parameters for ResNet architecture
--------------------------------------------------------------
layer_size = number of nodes/weights in ResNet layer
num_layers = number of ResNet layers, each of size 'layer_size'
num_inputs = number of ResNet inputs, which is also be the number of ResNet outputs (same number of equations for system of ODEs)